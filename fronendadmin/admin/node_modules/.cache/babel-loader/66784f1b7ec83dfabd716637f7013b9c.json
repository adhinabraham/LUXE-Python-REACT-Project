{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); //helper functions for generating error messages for diffrent form inputs.\n\nconst validator = {\n  // #################### Validating Name! ###########################\n  // @desc    handles name input blur event\n  // @params  value, error state setter\n  // @returns nothing\n  nameInputBlurHandler(name, setError) {\n    if (name === '') {\n      setError('This field cannot be empty!');\n    } else if (name.length < 4) {\n      setError('This field should have atleast 4 charecters.');\n    } else if (name.slice(-1) === ' ') {\n      setError('should not end with space.');\n    } else {\n      setError('');\n    }\n  },\n\n  // @desc    handles name input change event\n  // @params  value, error state setter\n  // @returns nothing\n  nameInputChangeHandler(name, setError) {\n    if (name.length === 0) {\n      setError('This field cannot be empty!');\n    } else if (name.charAt(0) === ' ') {\n      setError('should not start with space.');\n    } else if (name.includes('  ')) {\n      setError('should not contain consecutive spaces.');\n    } else if (/\\d/.test(name)) {\n      setError('should not contain numbers.');\n    } else if (!name.match(/^[a-zA-Z ]+$/)) {\n      setError('Invalid charecter!');\n    } else if (name === '') {\n      setError('This field cannot be empty!');\n    } else if (name.length < 4) {\n      setError('This field should have atleast 4 charecters.');\n    } else if (name.slice(-1) === ' ') {\n      setError('should not end with space.');\n    } else {\n      setError('');\n    }\n  },\n\n  // #################### Validating Email! ###########################\n  // @desc    handles email input blur event\n  // @params  email, error state setter\n  // @returns nothing\n  emailInputBlurHandler(email, setError) {\n    if (email === '') {\n      setError('This field cannot be empty!');\n    } else if (!email.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)) {\n      setError('This email id is not valid.');\n    } else {\n      setError('');\n    }\n  },\n\n  // @desc    handles email input change event\n  // @params  email, error setter\n  // @returns nothing\n  emailInputChangeHandler(email, setError) {\n    if (email.includes(' ')) {\n      setError('Email id should not contain space.');\n    } else {\n      setError('');\n    }\n  },\n\n  //######################### Validating phone number! ###########################\n  phoneInputBlurHandler(phone, setError) {\n    if (phone === '') {\n      setError('This field cannot be empty!');\n    } else if (phone.length < 10) {\n      setError('Phone number does not have 10 digits');\n    } else if (phone.length > 10) {\n      setError('Phone number has more than 10 digits');\n    } else {\n      setError('');\n    }\n  },\n\n  phoneInputChangeHandler(phone, setError) {\n    if (!phone.match(/^[0-9][-\\s\\./0-9]*$/g)) {\n      setError(\"Enter numbers only!\");\n    } else if (phone.length > 10) {\n      setError('Phone number has more than 10 digits');\n    } else {\n      setError('');\n    }\n  },\n\n  //######################### Validating Password! ###########################\n  // @desc    handles password input blur event\n  // @params  password, error setter\n  // @returns nothing\n  passwordInputBlurHandler(password, setError) {\n    if (password === '') {\n      setError('This field cannot be empty!');\n    } else if (password.length < 5) {\n      setError('password should have atleast 5 charecters');\n    } else if (password.length > 20) {\n      setError('password should not exceed 20 characters');\n    } else {\n      setError('');\n    }\n  },\n\n  // @desc    handles password input change event\n  // @params  password, error setter\n  // @returns nothing\n  passwordInputChangeHandler(password, setError) {\n    if (password.length > 20) {\n      setError('password should not exceed 20 characters');\n    } else {\n      setError('');\n    }\n  },\n\n  // #################### Validating Address or similar stuff! ###########################\n  // @desc    handles address input blur event\n  // @params  event object, error state setter\n  // @returns no return value\n  addressInputBlurHandler(value, setError) {\n    if (value === '') {\n      setError('This field cannot be empty!');\n    } else if (value.length < 4) {\n      setError('This field should have atleast 4 charecters.');\n    } else if (value.slice(-1) === ' ') {\n      setError('This field should not end with space.');\n    } else {\n      setError('');\n    }\n  },\n\n  // @desc    handles address input change event\n  // @params  value, error state setter\n  // @returns no return value\n  addressInputChangeHandler(value, setError) {\n    if (value.length === 0) {\n      setError('');\n    } else if (value.charAt(0) === ' ') {\n      setError('should not start with space.');\n    } else if (value.length < 4) {\n      setError('This field should have atleast 4 charecters.');\n    } else if (value.includes('  ')) {\n      setError('should not contain consecutive spaces.');\n    } else if (value.slice(-1) === ' ') {\n      setError('This field should not end with space.');\n    } else {\n      setError('');\n    }\n  },\n\n  //######################### Validating Postal Code! ###########################\n  // @desc    handles postal code(or any 6 digit number) input change event\n  // @params  postal code, error state setter\n  // @returns nothing\n  postalCodeInputBlurHandler(postalCode, setError) {\n    if (postalCode === '') {\n      setError('This field cannot be empty!');\n    } else if (postalCode.length !== 6) {\n      setError('Postal Code should have 6 digits');\n    } else {\n      setError('');\n    }\n  },\n\n  // @desc    handles postal code input blur event\n  // @params  postal code, error state setter\n  // @returns nothing\n  postalCodeInputChangeHandler(postalCode, setError) {\n    if (postalCode === '') {\n      setError('This field cannot be empty!');\n    } else if (!postalCode.match(/^[0-9]*$/g) && postalCode !== '') {\n      setError('Enter numbers only!');\n    } else if (postalCode.length > 6) {\n      setError('postalCode should not have more than 6 digits');\n    } else {\n      setError('');\n    }\n  },\n\n  //######################### Validating Prices! ###########################\n  // @desc    handles Price (or similar values) input change event\n  // @params  price, error state setter\n  // @returns nothing\n  priceInputBlurHandler(price, setError) {\n    if (price === '') {\n      setError('This field cannot be empty!');\n    } else if (Number(price) < 0) {\n      setError('Negative numbers are not allowed');\n    } else {\n      setError('');\n    }\n  },\n\n  // @desc    handles price input blur event\n  // @params  price, error state setter\n  // @returns nothing\n  priceInputChangeHandler(price, setError) {\n    if (price === '') {\n      setError('This field cannot be empty!');\n    } else if (!price.match(/^\\d+(,\\d{1,2})?$/)) {\n      setError('Enter a valid number!');\n    } else {\n      setError('');\n    }\n  },\n\n  //######################### Validating Percentages! ###########################\n  // @desc    handles Percentages (0-100 without percent symbol) input change event\n  // @params  percentage, error state setter\n  // @returns nothing\n  percentageInputBlurHandler(percentage, setError) {\n    if (percentage === '') {\n      setError('This field cannot be empty!');\n    } else if (Number(percentage) < 0) {\n      setError('Negative numbers are not allowed');\n    } else {\n      setError('');\n    }\n  },\n\n  // @desc    handles percentage input blur event\n  // @params  percentage, error state setter\n  // @returns nothing\n  percentageInputChangeHandler(percentage, setError) {\n    if (percentage === '') {\n      setError('This field cannot be empty!');\n    } else if (!percentage.match(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/g)) {\n      setError('Enter a valid percentage!');\n    } else {\n      setError('');\n    }\n  }\n\n};\nexports.default = validator;","map":{"version":3,"sources":["/home/adhin/sps/week10 project/fronendadmin/admin/node_modules/@brocode/simple-react-form-validation-helper/lib/index.js"],"names":["Object","defineProperty","exports","value","validator","nameInputBlurHandler","name","setError","length","slice","nameInputChangeHandler","charAt","includes","test","match","emailInputBlurHandler","email","emailInputChangeHandler","phoneInputBlurHandler","phone","phoneInputChangeHandler","passwordInputBlurHandler","password","passwordInputChangeHandler","addressInputBlurHandler","addressInputChangeHandler","postalCodeInputBlurHandler","postalCode","postalCodeInputChangeHandler","priceInputBlurHandler","price","Number","priceInputChangeHandler","percentageInputBlurHandler","percentage","percentageInputChangeHandler","default"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//helper functions for generating error messages for diffrent form inputs.\r\nconst validator = {\r\n    // #################### Validating Name! ###########################\r\n    // @desc    handles name input blur event\r\n    // @params  value, error state setter\r\n    // @returns nothing\r\n    nameInputBlurHandler(name, setError) {\r\n        if (name === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (name.length < 4) {\r\n            setError('This field should have atleast 4 charecters.');\r\n        }\r\n        else if (name.slice(-1) === ' ') {\r\n            setError('should not end with space.');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    // @desc    handles name input change event\r\n    // @params  value, error state setter\r\n    // @returns nothing\r\n    nameInputChangeHandler(name, setError) {\r\n        if (name.length === 0) {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (name.charAt(0) === ' ') {\r\n            setError('should not start with space.');\r\n        }\r\n        else if (name.includes('  ')) {\r\n            setError('should not contain consecutive spaces.');\r\n        }\r\n        else if (/\\d/.test(name)) {\r\n            setError('should not contain numbers.');\r\n        }\r\n        else if (!name.match(/^[a-zA-Z ]+$/)) {\r\n            setError('Invalid charecter!');\r\n        }\r\n        else if (name === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (name.length < 4) {\r\n            setError('This field should have atleast 4 charecters.');\r\n        }\r\n        else if (name.slice(-1) === ' ') {\r\n            setError('should not end with space.');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    // #################### Validating Email! ###########################\r\n    // @desc    handles email input blur event\r\n    // @params  email, error state setter\r\n    // @returns nothing\r\n    emailInputBlurHandler(email, setError) {\r\n        if (email === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (!email.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)) {\r\n            setError('This email id is not valid.');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    // @desc    handles email input change event\r\n    // @params  email, error setter\r\n    // @returns nothing\r\n    emailInputChangeHandler(email, setError) {\r\n        if (email.includes(' ')) {\r\n            setError('Email id should not contain space.');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    //######################### Validating phone number! ###########################\r\n    phoneInputBlurHandler(phone, setError) {\r\n        if (phone === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (phone.length < 10) {\r\n            setError('Phone number does not have 10 digits');\r\n        }\r\n        else if (phone.length > 10) {\r\n            setError('Phone number has more than 10 digits');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    phoneInputChangeHandler(phone, setError) {\r\n        if (!phone.match(/^[0-9][-\\s\\./0-9]*$/g)) {\r\n            setError(\"Enter numbers only!\");\r\n        }\r\n        else if (phone.length > 10) {\r\n            setError('Phone number has more than 10 digits');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    //######################### Validating Password! ###########################\r\n    // @desc    handles password input blur event\r\n    // @params  password, error setter\r\n    // @returns nothing\r\n    passwordInputBlurHandler(password, setError) {\r\n        if (password === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (password.length < 5) {\r\n            setError('password should have atleast 5 charecters');\r\n        }\r\n        else if (password.length > 20) {\r\n            setError('password should not exceed 20 characters');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    // @desc    handles password input change event\r\n    // @params  password, error setter\r\n    // @returns nothing\r\n    passwordInputChangeHandler(password, setError) {\r\n        if (password.length > 20) {\r\n            setError('password should not exceed 20 characters');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    // #################### Validating Address or similar stuff! ###########################\r\n    // @desc    handles address input blur event\r\n    // @params  event object, error state setter\r\n    // @returns no return value\r\n    addressInputBlurHandler(value, setError) {\r\n        if (value === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (value.length < 4) {\r\n            setError('This field should have atleast 4 charecters.');\r\n        }\r\n        else if (value.slice(-1) === ' ') {\r\n            setError('This field should not end with space.');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    // @desc    handles address input change event\r\n    // @params  value, error state setter\r\n    // @returns no return value\r\n    addressInputChangeHandler(value, setError) {\r\n        if (value.length === 0) {\r\n            setError('');\r\n        }\r\n        else if (value.charAt(0) === ' ') {\r\n            setError('should not start with space.');\r\n        }\r\n        else if (value.length < 4) {\r\n            setError('This field should have atleast 4 charecters.');\r\n        }\r\n        else if (value.includes('  ')) {\r\n            setError('should not contain consecutive spaces.');\r\n        }\r\n        else if (value.slice(-1) === ' ') {\r\n            setError('This field should not end with space.');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    //######################### Validating Postal Code! ###########################\r\n    // @desc    handles postal code(or any 6 digit number) input change event\r\n    // @params  postal code, error state setter\r\n    // @returns nothing\r\n    postalCodeInputBlurHandler(postalCode, setError) {\r\n        if (postalCode === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (postalCode.length !== 6) {\r\n            setError('Postal Code should have 6 digits');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    // @desc    handles postal code input blur event\r\n    // @params  postal code, error state setter\r\n    // @returns nothing\r\n    postalCodeInputChangeHandler(postalCode, setError) {\r\n        if (postalCode === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (!postalCode.match(/^[0-9]*$/g) && postalCode !== '') {\r\n            setError('Enter numbers only!');\r\n        }\r\n        else if (postalCode.length > 6) {\r\n            setError('postalCode should not have more than 6 digits');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    //######################### Validating Prices! ###########################\r\n    // @desc    handles Price (or similar values) input change event\r\n    // @params  price, error state setter\r\n    // @returns nothing\r\n    priceInputBlurHandler(price, setError) {\r\n        if (price === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (Number(price) < 0) {\r\n            setError('Negative numbers are not allowed');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    // @desc    handles price input blur event\r\n    // @params  price, error state setter\r\n    // @returns nothing\r\n    priceInputChangeHandler(price, setError) {\r\n        if (price === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (!price.match(/^\\d+(,\\d{1,2})?$/)) {\r\n            setError('Enter a valid number!');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    //######################### Validating Percentages! ###########################\r\n    // @desc    handles Percentages (0-100 without percent symbol) input change event\r\n    // @params  percentage, error state setter\r\n    // @returns nothing\r\n    percentageInputBlurHandler(percentage, setError) {\r\n        if (percentage === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (Number(percentage) < 0) {\r\n            setError('Negative numbers are not allowed');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n    // @desc    handles percentage input blur event\r\n    // @params  percentage, error state setter\r\n    // @returns nothing\r\n    percentageInputChangeHandler(percentage, setError) {\r\n        if (percentage === '') {\r\n            setError('This field cannot be empty!');\r\n        }\r\n        else if (!percentage.match(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/g)) {\r\n            setError('Enter a valid percentage!');\r\n        }\r\n        else {\r\n            setError('');\r\n        }\r\n    },\r\n};\r\nexports.default = validator;\r\n"]},"metadata":{},"sourceType":"script"}