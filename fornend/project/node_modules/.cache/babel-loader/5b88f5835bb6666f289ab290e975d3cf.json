{"ast":null,"code":"var _jsxFileName = \"/home/adhin/sps/week10 project/fornend/project/src/components/order/Paypal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst Paypal = _ref => {\n  _s();\n\n  let {\n    grandtotal\n  } = _ref;\n  const paypal = useRef();\n  const navigate = useNavigate();\n\n  const notification = m => {\n    toast.success(\" \" + m, {\n      theme: \"dark\",\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  const notification2 = m => {\n    toast.error(\" \" + m, {\n      theme: \"dark\",\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  useEffect(() => {\n    // username: userid,\n    //   address: address,\n    //   payment_method: paymentmethod,\n    //   order_number: uniqueid,\n    const username = localStorage.getItem(\"userid\");\n    const address = localStorage.getItem(\"addrssid\");\n    const payment = \"PayPal\";\n    const ordernumber = localStorage.getItem(\"orderid\");\n    console.log(ordernumber, \"paypalordernumber\");\n\n    const placeorder = async () => {\n      try {\n        const paymentoption = \"PayPal\";\n        const data = {\n          \"username\": username,\n          \"address\": address,\n          \"payment_method\": payment,\n          \"order_number\": ordernumber\n        };\n        const url = \"http://127.0.0.1:8000/order/orderplaced/\";\n        const {\n          data: res\n        } = await axios.post(url, data);\n        const userdetail = {\n          \"userid\": username\n        };\n        const urls = \"http://127.0.0.1:8000/cart/additem/\";\n        await axios.put(urls, userdetail);\n        localStorage.removeItem(\"orderid\");\n        localStorage.removeItem(\"addrssid\");\n        loc;\n        navigate('/'); // const createdmessage = res.message;\n        // const notify = notification(createdmessage);\n      } catch (error) {\n        if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n          const errornotify = notification2(error.response.data.message);\n        }\n      } finally {\n        console.log(\"Order Placing completed\");\n      }\n    };\n\n    window.paypal.Buttons({\n      createOrder: (data, actions, err) => {\n        return actions.order.create({\n          intent: \"CAPTURE\",\n          purchase_units: [{\n            description: \"Thank You For Shopping From LUXE.\",\n            amount: {\n              currency_code: \"USD\",\n              value: grandtotal\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        console.table(order);\n        placeorder();\n      },\n      onError: err => {\n        console.error(err);\n      },\n      style: {\n        layout: \"vertical\",\n        color: \"gold\",\n        shape: \"pill\",\n        label: \"pay\"\n      }\n    }).render(paypal.current);\n  }, [grandtotal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paypal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Paypal, \"F7pWbqUE4h8+xgzj8LcbFoD+cEo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Paypal;\nexport default Paypal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paypal\");","map":{"version":3,"sources":["/home/adhin/sps/week10 project/fornend/project/src/components/order/Paypal.js"],"names":["React","useEffect","useRef","useNavigate","toast","axios","configure","Paypal","grandtotal","paypal","navigate","notification","m","success","theme","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","notification2","error","username","localStorage","getItem","address","payment","ordernumber","console","log","placeorder","paymentoption","data","url","res","post","userdetail","urls","put","removeItem","loc","response","status","errornotify","message","window","Buttons","createOrder","actions","err","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","capture","table","onError","style","layout","color","shape","label","render","current"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\ntoast.configure();\n\n\nconst Paypal = ({ grandtotal }) => {\n  const paypal = useRef();\n  const navigate = useNavigate();\n\n  const notification = (m) => {\n    toast.success(\" \" + m, {\n      theme: \"dark\",\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  const notification2 = (m) => {\n    toast.error(\" \" + m, {\n      theme: \"dark\",\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  useEffect(() => {\n    \n  // username: userid,\n  //   address: address,\n  //   payment_method: paymentmethod,\n  //   order_number: uniqueid,\n    \n    const username = localStorage.getItem(\"userid\")\n    const address = localStorage.getItem(\"addrssid\");\n    const payment = \"PayPal\"\n    const ordernumber = localStorage.getItem(\"orderid\");\n    console.log(ordernumber,\"paypalordernumber\")\n    \n    const placeorder = async () => {\n      try {\n        const paymentoption = \"PayPal\";\n        const data = {\"username\":username,\"address\":address,\"payment_method\":payment,\"order_number\":ordernumber};\n        const url = \"http://127.0.0.1:8000/order/orderplaced/\";\n        const { data: res } = await axios.post(url, data);\n        const userdetail = { \"userid\": username };\n\n        const urls = \"http://127.0.0.1:8000/cart/additem/\";\n        await axios.put(urls, userdetail)\n        localStorage.removeItem(\"orderid\")\n        localStorage.removeItem(\"addrssid\")\n        loc\n\n        navigate('/')\n        // const createdmessage = res.message;\n\n        // const notify = notification(createdmessage);\n      } catch (error) {\n        if (\n          error.response &&\n          error.response.status >= 400 &&\n          error.response.status <= 500\n        ) {\n          const errornotify = notification2(error.response.data.message);\n        }\n      } finally {\n        console.log(\"Order Placing completed\");\n      }\n    };\n    window.paypal\n      .Buttons({\n        createOrder: (data, actions, err) => {\n          return actions.order.create({\n            intent: \"CAPTURE\",\n            purchase_units: [\n              {\n                description: \"Thank You For Shopping From LUXE.\",\n                amount: {\n                  currency_code: \"USD\",\n                  value: grandtotal,\n                },\n              },\n            ],\n          });\n        },\n        onApprove: async (data, actions) => {\n          const order = await actions.order.capture();\n          console.table(order);\n          placeorder()\n\n        },\n\n        onError: (err) => {\n          console.error(err);\n        },\n        style: {\n          layout: \"vertical\",\n          color: \"gold\",\n          shape: \"pill\",\n          label: \"pay\",\n        },\n      })\n      .render(paypal.current);\n  }, [grandtotal]);\n\n  return (\n    <div>\n      <div ref={paypal}></div>\n    </div>\n  );\n};\nexport default Paypal;\n"]},"metadata":{},"sourceType":"module"}